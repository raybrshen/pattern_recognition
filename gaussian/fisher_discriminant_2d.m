% parameters: training samples of the two classes, dimensions% return: data points of discriminant functionfunction dis = fisher_discriminant_2d(samples1,samples2,d1,d2)  samples1 = samples1(:,[d1,d2]);  samples2 = samples2(:,[d1,d2]);  [w,c] = train_fisher(samples1,samples2);  samples = [samples1;samples2];  mini = min(samples(:,1));  maxi = max(samples(:,1));  npoints = 100;  step = (maxi-mini)*3/2/100;  st = mini-((maxi-mini)/4);  dis = zeros(npoints,3);  for i = 1:(npoints+1)    x = st+step*(i-1);    point = (1./2).*(mean(samples1).+mean(samples2));    a = (-w(1)/w(2));    b = point(2).-(a.*point(1));    y = a.*x.+b;    % x-y1 : fisher's discriminant function    % x-y2 : fisher's ratio function    %if c>0    %  y1 = x*(-w(1)/w(2))+sqrt((c*w(1)/w(2))^2+(c)^2);    %  y2 = x*(w(2)/w(1));    %else    %  y1 = x*(-w(1)/w(2))-sqrt((c*w(1)/w(2))^2+(c)^2);    %  y2 = x*(w(2)/w(1));    %end    dis(i,1) = x;    dis(i,2) = y;  endend